<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Auth_Model_ChantierProxy extends \Auth_Model_Chantier implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function __set($attr, $val)
    {
        $this->__load();
        return parent::__set($attr, $val);
    }

    public function __get($attr)
    {
        $this->__load();
        return parent::__get($attr);
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }

    public function getId_chantier()
    {
        $this->__load();
        return parent::getId_chantier();
    }

    public function getAdresse()
    {
        $this->__load();
        return parent::getAdresse();
    }

    public function getAdresse2()
    {
        $this->__load();
        return parent::getAdresse2();
    }

    public function getVille()
    {
        $this->__load();
        return parent::getVille();
    }

    public function getCode_postal()
    {
        $this->__load();
        return parent::getCode_postal();
    }

    public function getId_zone()
    {
        $this->__load();
        return parent::getId_zone();
    }

    public function setId_chantier($id_chantier)
    {
        $this->__load();
        return parent::setId_chantier($id_chantier);
    }

    public function setAdresse($adresse)
    {
        $this->__load();
        return parent::setAdresse($adresse);
    }

    public function setAdresse2($adresse2)
    {
        $this->__load();
        return parent::setAdresse2($adresse2);
    }

    public function setVille($ville)
    {
        $this->__load();
        return parent::setVille($ville);
    }

    public function setCode_postal($code_postal)
    {
        $this->__load();
        return parent::setCode_postal($code_postal);
    }

    public function setId_zone($id_zone)
    {
        $this->__load();
        return parent::setId_zone($id_zone);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id_chantier', 'adresse', 'adresse2', 'ville', 'code_postal', 'id_zone');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}